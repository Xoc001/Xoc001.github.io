{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"SMBMS","date":"2022-02-10T17:38:23.832Z","updated":"2021-07-25T14:43:02.005Z","comments":true,"path":"api/articles/SMBMS.json","keywords":null,"cover":[],"content":"<h1 id=\"SMBMS\"><a href=\"#SMBMS\" class=\"headerlink\" title=\"SMBMS\"></a>SMBMS</h1><h2 id=\"1、项目搭建\"><a href=\"#1、项目搭建\" class=\"headerlink\" title=\"1、项目搭建\"></a>1、项目搭建</h2><p>1.搭建一个Maven web 项目</p>\n<p>2.配置Tomcat</p>\n<p>3.测试项目</p>\n<p>4.导入项目中需要的jar包</p>\n<p>5.编写实体类</p>\n<p>​        ORM映射：表-类映射</p>\n<p>6.编写基础公共类</p>\n<p>​        1.数据库配置文件</p>\n<pre class=\"line-numbers language-properties\" data-language=\"properties\"><code class=\"language-properties\">driver&#x3D;com.mysql.jdbc.Driver\nurl&#x3D;jdbc:mysql:&#x2F;&#x2F;localhost:3306?useUnicode&#x3D;true&amp;characterEncoding&#x3D;utf-8\nusername&#x3D;root\npassword&#x3D;</code></pre>\n\n<p>​        2.数据库公共操作类</p>\n<pre class=\"line-numbers language-JAVA\" data-language=\"JAVA\"><code class=\"language-JAVA\">package my.dao;\n\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.sql.*;\nimport java.util.Properties;\n\npublic class BaseDao &#123;\n    private static String driver;\n    private static String url;\n    private static String username;\n    private static String password;\n\n    static &#123;\n        Properties properties &#x3D; new Properties();\n        InputStream input &#x3D; BaseDao.class.getResourceAsStream(&quot;do.properties&quot;);\n\n        try &#123;\n            properties.load(input);\n        &#125; catch (IOException e) &#123;\n            e.printStackTrace();\n        &#125;\n\n        driver &#x3D; properties.getProperty(&quot;driver&quot;);\n        url &#x3D; properties.getProperty(&quot;url&quot;);\n        username &#x3D; properties.getProperty(&quot;username&quot;);\n        password &#x3D; properties.getProperty(&quot;password&quot;);\n\n    &#125;\n\n    &#x2F;&#x2F;获取数据库的连接\n    public static Connection getConnection() throws ClassNotFoundException &#123;\n        Connection connection &#x3D; null;\n        try &#123;\n            Class.forName(driver);\n            connection &#x3D; DriverManager.getConnection(url, username, password);\n        &#125; catch (Exception e) &#123;\n            e.printStackTrace();\n        &#125;\n        return connection;\n    &#125;\n\n    &#x2F;&#x2F;编写查询公共类\n    public static ResultSet executeQuery(PreparedStatement preparedStatement, Connection connection, String sql, Object[] params, ResultSet resultSet) throws SQLException &#123;\n        preparedStatement &#x3D; connection.prepareStatement(sql);\n        for (int i &#x3D; 0; i &lt; params.length; i++) &#123;\n            &#x2F;&#x2F;占位符从1开始，数组从0开始\n            preparedStatement.setObject(i + 1, params[i]);\n        &#125;\n        resultSet &#x3D; preparedStatement.executeQuery();\n        return resultSet;\n    &#125;\n\n    &#x2F;&#x2F;编写增删改公共方法\n    public static int update(PreparedStatement preparedStatement, Connection connection, String sql, Object[] params) throws SQLException &#123;\n        preparedStatement &#x3D; connection.prepareStatement(sql);\n        for (int i &#x3D; 0; i &lt; params.length; i++) &#123;\n            preparedStatement.setObject(i + 1, params[i]);\n        &#125;\n        int updateRows &#x3D; preparedStatement.executeUpdate();\n        return updateRows;\n    &#125;\n\n    &#x2F;&#x2F;释放资源操作\n    public static boolean closeResources(Connection connection, PreparedStatement preparedStatement, ResultSet resultSet) &#123;\n        boolean flag &#x3D; true;\n        if (resultSet !&#x3D; null) &#123;\n            try &#123;\n                resultSet.close();\n                &#x2F;&#x2F;GC回收\n                resultSet &#x3D; null;\n            &#125; catch (SQLException e) &#123;\n                e.printStackTrace();\n                flag &#x3D; false;\n            &#125;\n        &#125;\n\n        if (preparedStatement !&#x3D; null) &#123;\n            try &#123;\n                preparedStatement.close();\n                &#x2F;&#x2F;GC回收\n                preparedStatement &#x3D; null;\n            &#125; catch (SQLException e) &#123;\n                e.printStackTrace();\n                flag &#x3D; false;\n            &#125;\n        &#125;\n\n        if (connection !&#x3D; null) &#123;\n            try &#123;\n                connection.close();\n                &#x2F;&#x2F;GC回收\n                connection &#x3D; null;\n            &#125; catch (SQLException e) &#123;\n                e.printStackTrace();\n                flag &#x3D; false;\n            &#125;\n        &#125;\n\n        return flag;\n    &#125;\n&#125;\n</code></pre>\n\n<p>​        3.编写字符编码过滤器</p>\n<ol start=\"7\">\n<li></li>\n</ol>\n<h2 id=\"2、登录界面实现\"><a href=\"#2、登录界面实现\" class=\"headerlink\" title=\"2、登录界面实现\"></a>2、登录界面实现</h2><p><img src=\"/SMBMS.assets/image-20210720161536068.png\" alt=\"image-20210720161536068\"></p>\n<p>1.编写前端界面</p>\n<p>2.设置首页</p>\n<pre class=\"line-numbers language-xm\" data-language=\"xm\"><code class=\"language-xm\">&lt;!--    设置欢迎界面--&gt;\n&lt;welcome-file-list&gt;\n&lt;welcome-file&gt;login.jsp&lt;&#x2F;welcome-file&gt;\n&lt;&#x2F;welcome-file-list&gt;</code></pre>\n\n<p>3.编写Servlet</p>\n<pre class=\"line-numbers language-JAVA\" data-language=\"JAVA\"><code class=\"language-JAVA\">protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;\n        String userCode &#x3D; req.getParameter(&quot;userCode&quot;);\n        String password &#x3D; req.getParameter(&quot;userPassword&quot;);\n\n        UserServiceImpl userService &#x3D; new UserServiceImpl();\n        User user &#x3D; userService.login(userCode, password);\n        if (user !&#x3D; null) &#123;\n            if (user.getUserPassword().equals(password)) &#123;\n                HttpSession session &#x3D; req.getSession();\n                session.setAttribute(Constants.User_SESSION, user);\n                resp.sendRedirect(&quot;jsp&#x2F;frame.jsp&quot;);\n            &#125; else &#123;\n                req.setAttribute(&quot;error&quot;, &quot;密码不正确&quot;);\n                req.getRequestDispatcher(&quot;login.jsp&quot;).forward(req, resp);\n            &#125;\n\n        &#125; else &#123;\n            req.setAttribute(&quot;error&quot;, &quot;用户名或密码不正确&quot;);\n            req.getRequestDispatcher(&quot;login.jsp&quot;).forward(req, resp);\n        &#125;\n    &#125;\n</code></pre>\n\n\n\n<p>4.注册Servlet</p>\n<pre class=\"line-numbers language-XML\" data-language=\"XML\"><code class=\"language-XML\">&lt;servlet&gt;\n    &lt;servlet-name&gt;LoginServlet&lt;&#x2F;servlet-name&gt;\n    &lt;servlet-class&gt;my.servlet.user.LoginServlet&lt;&#x2F;servlet-class&gt;\n&lt;&#x2F;servlet&gt;\n&lt;servlet-mapping&gt;\n    &lt;servlet-name&gt;LoginServlet&lt;&#x2F;servlet-name&gt;\n    &lt;url-pattern&gt;&#x2F;login.do&lt;&#x2F;url-pattern&gt;\n&lt;&#x2F;servlet-mapping&gt;</code></pre>\n\n<h3 id=\"登录界面优化\"><a href=\"#登录界面优化\" class=\"headerlink\" title=\"登录界面优化\"></a>登录界面优化</h3><h2 id=\"3、密码修改\"><a href=\"#3、密码修改\" class=\"headerlink\" title=\"3、密码修改\"></a>3、密码修改</h2><p>1、导入前端素材</p>\n<p>2、写项目，建议从底层向上写</p>\n<img src=\"SMBMS.assets/image-20210721155045267.png\" alt=\"image-20210721155045267\" style=\"zoom:80%;\" />\n\n<p>3、UserDao接口</p>\n<pre class=\"line-numbers language-JAVA\" data-language=\"JAVA\"><code class=\"language-JAVA\">&#x2F;&#x2F;密码修改\n    public int updatePassword(Connection connection,int id,String password) throws SQLException;</code></pre>\n\n\n\n<p>4、UserDaoImpl实现类</p>\n<pre class=\"line-numbers language-JAVA\" data-language=\"JAVA\"><code class=\"language-JAVA\">&#x2F;&#x2F;用户密码修改\npublic int updatePassword(Connection connection, int id, String password) throws SQLException &#123;\n    PreparedStatement preparedStatement &#x3D; null;\n    int flag &#x3D; 0;\n    if (connection !&#x3D; null) &#123;\n        String sql &#x3D; &quot;update &#96;smbms_user&#96; set userPassword&#x3D;? where id&#x3D;?&quot;;\n        Object[] params &#x3D; &#123;password, id&#125;;\n        flag &#x3D; BaseDao.update(preparedStatement, connection, sql, params);\n        BaseDao.closeResources(null, preparedStatement, null);\n    &#125;\n    return flag;\n&#125;</code></pre>\n\n\n\n<p>5、Service接口</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;修改密码\n   public boolean updatePassword(int id,String password);</code></pre>\n\n\n\n<p>6、ServiceImpl实现类</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;修改密码\npublic boolean updatePassword(int id, String password) &#123;\n    Connection connection &#x3D; null;\n    boolean flag &#x3D; false;\n    try &#123;\n        connection &#x3D; BaseDao.getConnection();\n        if (userDao.updatePassword(connection, id, password) &gt; 0) &#123;\n            flag &#x3D; true;\n        &#125;\n    &#125; catch (Exception e) &#123;\n        e.printStackTrace();\n    &#125; finally &#123;\n        BaseDao.closeResources(connection, null, null);\n    &#125;\n\n    return flag;\n&#125;\n</code></pre>\n\n\n\n<p>7、Servlet实现类</p>\n<pre class=\"line-numbers language-JAVA\" data-language=\"JAVA\"><code class=\"language-JAVA\">protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;\n    String oldpassword &#x3D; req.getParameter(&quot;oldpassword&quot;);\n    String newpassword &#x3D; req.getParameter(&quot;newpassword&quot;);\n    String rnewpassword &#x3D; req.getParameter(&quot;rnewpassword&quot;);\n    User user &#x3D; (User) req.getSession().getAttribute(Constants.User_SESSION);\n\n    boolean flag &#x3D; false;\n    if (oldpassword.equals(user.userPassword)) &#123;\n        if (newpassword.equals(rnewpassword)) &#123;\n            UserService service &#x3D; new UserServiceImpl();\n            flag &#x3D; service.updatePassword(user.getId(), newpassword);\n            if(flag)&#123;\n                req.setAttribute(&quot;message&quot;,&quot;修改密码成功,请退出重新登陆&quot;);\n                req.getSession().removeAttribute(Constants.User_SESSION);\n            &#125;else &#123;\n                req.setAttribute(&quot;message&quot;,&quot;密码修改失败&quot;);\n            &#125;\n\n        &#125;else&#123;\n            req.setAttribute(&quot;message&quot;,&quot;两次输入的密码不一致&quot;);\n        &#125;\n    &#125;else&#123;\n        req.setAttribute(&quot;message&quot;,&quot;旧密码输入错误&quot;);\n    &#125;\n    req.getRequestDispatcher(&quot;pwdmodify.jsp&quot;).forward(req,resp);\n&#125;</code></pre>\n\n\n\n<p>8、复用Servlet</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">String method &#x3D; req.getParameter(&quot;method&quot;);\nif (method !&#x3D; null &amp;&amp; method.equals(&quot;savepwd&quot;)) &#123;\n    this.updatePwd(req, resp);\n&#125; else if (method !&#x3D; null &amp;&amp; method.equals(&quot;pwdmodify&quot;)) &#123;\n    this.pwdModify(req, resp);\n&#125;</code></pre>\n\n\n\n<h2 id=\"4、用户管理实现\"><a href=\"#4、用户管理实现\" class=\"headerlink\" title=\"4、用户管理实现\"></a>4、用户管理实现</h2><p>流程</p>\n<p><img src=\"/SMBMS.assets/image-20210722165029038.png\" alt=\"image-20210722165029038\"></p>\n<p>1.导入分页的工具类</p>\n<p>2.用户列表页面导入</p>\n<h3 id=\"1、用户管理\"><a href=\"#1、用户管理\" class=\"headerlink\" title=\"1、用户管理\"></a>1、用户管理</h3><h4 id=\"1、获取用户数量\"><a href=\"#1、获取用户数量\" class=\"headerlink\" title=\"1、获取用户数量\"></a>1、获取用户数量</h4><h5 id=\"1-UserDao\"><a href=\"#1-UserDao\" class=\"headerlink\" title=\"1.UserDao\"></a>1.UserDao</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;用户数量查询\n   public int getUserCount(Connection connection,String userName,int userRole) throws SQLException;</code></pre>\n\n\n\n<h5 id=\"2-UserDaoImpl\"><a href=\"#2-UserDaoImpl\" class=\"headerlink\" title=\"2.UserDaoImpl\"></a>2.UserDaoImpl</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;用户数量查询\n   public int getUserCount(Connection connection, String userName, int userRole) throws SQLException &#123;\n       PreparedStatement preparedStatement &#x3D; null;\n       ResultSet rs &#x3D; null;\n       int count &#x3D; 0;\n       if (connection !&#x3D; null) &#123;\n           StringBuffer sql &#x3D; new StringBuffer();\n           sql.append(&quot;select count(1) as count from smbms_user u,smbms_role r where u.userRole &#x3D; r.id&quot;);\n           ArrayList&lt;Object&gt; list &#x3D; new ArrayList&lt;Object&gt;();\n\n           if (userName !&#x3D; null) &#123;\n               sql.append(&quot; and u.userName&#x3D;?&quot;);\n               list.add(&quot;%&quot; + userName + &quot;%&quot;);\n           &#125;\n           if (userRole &gt; 0) &#123;\n               sql.append(&quot; and u.userRole&#x3D;?&quot;);\n               list.add(userRole);\n           &#125;\n           Object[] params &#x3D; list.toArray();\n           rs &#x3D; BaseDao.executeQuery(preparedStatement, connection, sql.toString(), params, rs);\n           if (rs.next()) &#123;\n               count &#x3D; rs.getInt(&quot;count&quot;);\n           &#125;\n           BaseDao.closeResources(null, preparedStatement, rs);\n       &#125;\n       return count;\n   &#125;</code></pre>\n\n\n\n<h5 id=\"3-UserService\"><a href=\"#3-UserService\" class=\"headerlink\" title=\"3.UserService\"></a>3.UserService</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;查询用户数量\n public int getUserCount(String userName,int userRole);</code></pre>\n\n\n\n<h5 id=\"4-UserServiceImpl\"><a href=\"#4-UserServiceImpl\" class=\"headerlink\" title=\"4.UserServiceImpl\"></a>4.UserServiceImpl</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;查询用户数量\npublic int getUserCount(String userName, int userRole) &#123;\n    Connection connection &#x3D; null;\n    int count &#x3D;0;\n    try &#123;\n        connection &#x3D; BaseDao.getConnection();\n        count &#x3D; userDao.getUserCount(connection,userName,userRole);\n    &#125; catch (Exception e) &#123;\n        e.printStackTrace();\n    &#125;finally &#123;\n        BaseDao.closeResources(connection,null,null);\n    &#125;\n    return count;\n&#125;</code></pre>\n\n<h5 id=\"5、servlet操作\"><a href=\"#5、servlet操作\" class=\"headerlink\" title=\"5、servlet操作\"></a>5、servlet操作</h5><h4 id=\"2、获取用户列表\"><a href=\"#2、获取用户列表\" class=\"headerlink\" title=\"2、获取用户列表\"></a>2、获取用户列表</h4><h5 id=\"1-UserDao-1\"><a href=\"#1-UserDao-1\" class=\"headerlink\" title=\"1.UserDao\"></a>1.UserDao</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;查询用户列表\n   public List&lt;User&gt; getUserList(Connection connection,String userName,int userRole,int currentPageNo,int pageSize) throws SQLException;</code></pre>\n\n<h5 id=\"2-UserDaoImpl-1\"><a href=\"#2-UserDaoImpl-1\" class=\"headerlink\" title=\"2.UserDaoImpl\"></a>2.UserDaoImpl</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;用户列表查询\n    public List&lt;User&gt; getUserList(Connection connection, String userName, int userRole, int currentPageNo, int pageSize) throws SQLException &#123;\n        PreparedStatement preparedStatement &#x3D; null;\n        ResultSet rs &#x3D; null;\n        List&lt;User&gt; userList &#x3D; new ArrayList&lt;User&gt;();\n        if (connection !&#x3D; null) &#123;\n            StringBuffer sql &#x3D; new StringBuffer();\n            sql.append(&quot;select u.*,r.roleName as userRoleName from smbms_user u,smbms_role r where u.userRole&#x3D;r.id&quot;);\n            List&lt;Object&gt; list &#x3D; new ArrayList&lt;Object&gt;();\n            if (!StringUtils.isNullOrEmpty(userName)) &#123;\n                sql.append(&quot; and u.userName&#x3D; ? &quot;);\n                list.add(&quot;%&quot; + userName + &quot;%&quot;);\n            &#125;\n            if (userRole &gt; 0) &#123;\n                sql.append(&quot; and u.userRole&#x3D;&quot;);\n                list.add(userRole);\n            &#125;\n\n            &#x2F;&#x2F;分页使用 LIMIT查询\n            &#x2F;&#x2F;0,5\n            &#x2F;&#x2F;5,5\n            &#x2F;&#x2F;10,5\n\n            sql.append(&quot; order by creationDate DESC limit ?,?&quot;);\n            currentPageNo &#x3D; (currentPageNo - 1) * pageSize;\n            list.add(currentPageNo);\n            list.add(pageSize);\n\n            Object[] params &#x3D; list.toArray();\n            rs &#x3D; BaseDao.executeQuery(preparedStatement, connection, sql.toString(), params, rs);\n            while (rs.next()) &#123;\n                User user &#x3D; new User();\n                user &#x3D; new User();\n                user.setId(rs.getInt(&quot;id&quot;));\n                user.setUserCode(rs.getString(&quot;userCode&quot;));\n                user.setUserName(rs.getString(&quot;userName&quot;));\n                user.setUserPassword(rs.getString(&quot;userPassword&quot;));\n                user.setGender(rs.getInt(&quot;gender&quot;));\n                user.setBirthday(rs.getDate(&quot;birthday&quot;));\n                user.setPhone(rs.getString(&quot;phone&quot;));\n                user.setAddress(rs.getString(&quot;address&quot;));\n                user.setUserRole(rs.getInt(&quot;userRole&quot;));\n                user.setCreatedBy(rs.getLong(&quot;createdBy&quot;));\n                user.setCreationDate(rs.getDate(&quot;creationDate&quot;));\n                user.setModifyBy(rs.getLong(&quot;modifyBy&quot;));\n                user.setModifyDate(rs.getDate(&quot;modifyDate&quot;));\n\n                userList.add(user);\n            &#125;\n            BaseDao.closeResources(null, preparedStatement, rs);\n        &#125;\n        return userList;\n    &#125;\n</code></pre>\n\n<h5 id=\"3-UserService-1\"><a href=\"#3-UserService-1\" class=\"headerlink\" title=\"3.UserService\"></a>3.UserService</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;查询用户列表\n  public List&lt;User&gt; getUserList(String userName,int userRole,int currentPageNo,int pageSize);</code></pre>\n\n<h5 id=\"4-UserServiceImpl-1\"><a href=\"#4-UserServiceImpl-1\" class=\"headerlink\" title=\"4.UserServiceImpl\"></a>4.UserServiceImpl</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;查询用户列表\n   public List&lt;User&gt; getUserList(String userName, int userRole, int currentPageNo, int pageSize) &#123;\n       Connection connection &#x3D;null;\n       List&lt;User&gt;userList &#x3D; new ArrayList&lt;User&gt;();\n       try &#123;\n           connection &#x3D; BaseDao.getConnection();\n           userList &#x3D; userDao.getUserList(connection,userName,userRole,currentPageNo,pageSize);\n       &#125; catch (Exception e) &#123;\n           e.printStackTrace();\n       &#125;finally &#123;\n           BaseDao.closeResources(connection,null,null);\n       &#125;\n       return userList;\n   &#125;</code></pre>\n\n<h5 id=\"5-Servlet实现\"><a href=\"#5-Servlet实现\" class=\"headerlink\" title=\"5.Servlet实现\"></a>5.Servlet实现</h5><pre class=\"line-numbers language-JAVA\" data-language=\"JAVA\"><code class=\"language-JAVA\"> &#x2F;&#x2F;查询用户列表\n    public void query(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;\n        String queryUserName &#x3D; req.getParameter(&quot;queryname&quot;);\n        String temp &#x3D; req.getParameter(&quot;queryUserRole&quot;);\n        String pageIndex &#x3D; req.getParameter(&quot;pageIndex&quot;);\n        int queryUserRole &#x3D; 0;\n\n        &#x2F;&#x2F;获取用户列表\n        UserServiceImpl userService &#x3D; new UserServiceImpl();\n        List&lt;User&gt; userList &#x3D; null;\n\n        int pageSize &#x3D; 5;\n        int currentPageNo &#x3D; 1;\n        if (queryUserName &#x3D;&#x3D; null) &#123;\n            queryUserName &#x3D; &quot;&quot;;\n        &#125;\n        if (temp !&#x3D; null &amp;&amp; !temp.equals(&quot;&quot;)) &#123;\n            queryUserRole &#x3D; Integer.parseInt(temp);\n        &#125;\n        if (pageIndex !&#x3D; null) &#123;\n            currentPageNo &#x3D; Integer.parseInt(pageIndex);\n        &#125;\n        &#x2F;&#x2F;获取用户总数 ()\n        int totalCount &#x3D; userService.getUserCount(queryUserName, queryUserRole);\n        &#x2F;&#x2F;总页数支持\n        PageSupport pageSupport &#x3D; new PageSupport();\n        pageSupport.setCurrentPageNo(currentPageNo);        &#x2F;&#x2F;设置当前页\n        pageSupport.setPageSize(pageSize);                  &#x2F;&#x2F;设置分页数量限制\n        pageSupport.setTotalCount(totalCount);              &#x2F;&#x2F;设置总数\n&#x2F;&#x2F;        pageSupport.setTotalPageCountByRs();        &#x2F;&#x2F;设置totalPageCount数量\n\n        int totalPageCount &#x3D; pageSupport.getTotalPageCount();       &#x2F;&#x2F;得到总分页数量。\n\n        &#x2F;&#x2F;控制首尾页显示\n        if (currentPageNo &lt; 1) &#123;        &#x2F;&#x2F;当前页小于1\n            currentPageNo &#x3D; 1;\n        &#125; else if (currentPageNo &gt; totalPageCount) &#123;         &#x2F;&#x2F;当前页大于总页数\n            currentPageNo &#x3D; totalPageCount;\n        &#125;\n\n\n        userList &#x3D; userService.getUserList(queryUserName, queryUserRole, currentPageNo, pageSize);\n        req.setAttribute(&quot;userList&quot;, userList);\n        List&lt;Role&gt; roleList &#x3D; null;\n        RoleService roleService &#x3D; new RoleServiceImpl();\n        roleList &#x3D; roleService.getRoleList();\n\n\n        req.setAttribute(&quot;roleList&quot;, roleList);\n        req.setAttribute(&quot;queryUserName&quot;, queryUserName);\n        req.setAttribute(&quot;queryUserRole&quot;, queryUserRole);\n        req.setAttribute(&quot;totalPageCount&quot;, totalPageCount);\n        req.setAttribute(&quot;totalCount&quot;, totalCount);\n        req.setAttribute(&quot;currentPageNo&quot;, currentPageNo);\n\n\n        req.getRequestDispatcher(&quot;userlist.jsp&quot;).forward(req, resp);</code></pre>\n\n\n\n\n\n\n\n<h4 id=\"3、获取角色列表\"><a href=\"#3、获取角色列表\" class=\"headerlink\" title=\"3、获取角色列表\"></a>3、获取角色列表</h4><h5 id=\"1、RoleDao\"><a href=\"#1、RoleDao\" class=\"headerlink\" title=\"1、RoleDao\"></a>1、RoleDao</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;获取角色列表\npublic List&lt;Role&gt; getRoleList(Connection connection) throws ClassNotFoundException, SQLException;</code></pre>\n\n<h5 id=\"2、RoleDaoImpl\"><a href=\"#2、RoleDaoImpl\" class=\"headerlink\" title=\"2、RoleDaoImpl\"></a>2、RoleDaoImpl</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;获取角色列表\n    public List&lt;Role&gt; getRoleList(Connection connection) throws ClassNotFoundException, SQLException &#123;\n        PreparedStatement preparedStatement &#x3D; null;\n        ResultSet rs &#x3D; null;\n        List&lt;Role&gt; roleList &#x3D; new ArrayList&lt;Role&gt;();\n\n        connection &#x3D; BaseDao.getConnection();\n        String sql &#x3D; &quot;select * from smbms_role&quot;;\n        Object[] params &#x3D; &#123;&#125;;\n        rs &#x3D; BaseDao.executeQuery(preparedStatement, connection, sql, params, rs);\n        while (rs.next()) &#123;\n            Role role &#x3D; new Role();\n            role.setId(rs.getInt(&quot;id&quot;));\n            role.setRoleCode(rs.getString(&quot;roleCode&quot;));\n            role.setRoleName(rs.getString(&quot;roleName&quot;));\n            roleList.add(role);\n        &#125;\n        BaseDao.closeResources(null, preparedStatement, rs);\n        return null;\n    &#125;\n&#125;</code></pre>\n\n<h5 id=\"3、RoleService\"><a href=\"#3、RoleService\" class=\"headerlink\" title=\"3、RoleService\"></a>3、RoleService</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;获取角色列表\n   public List&lt;Role&gt; getRoleList();</code></pre>\n\n<h5 id=\"4、RoleServiceImpl\"><a href=\"#4、RoleServiceImpl\" class=\"headerlink\" title=\"4、RoleServiceImpl\"></a>4、RoleServiceImpl</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public List&lt;Role&gt; getRoleList() &#123;\n    Connection connection &#x3D; null;\n    List&lt;Role&gt; roleList &#x3D; null;\n    try &#123;\n        connection &#x3D; BaseDao.getConnection();\n        roleList &#x3D;roleDao.getRoleList(connection);\n    &#125; catch (Exception e) &#123;\n        e.printStackTrace();\n    &#125;finally &#123;\n        BaseDao.closeResources(connection,null,null);\n    &#125;\n    return roleList;\n&#125;</code></pre>\n\n\n\n<h4 id=\"4、添加用户\"><a href=\"#4、添加用户\" class=\"headerlink\" title=\"4、添加用户\"></a>4、添加用户</h4><h5 id=\"1、UserDao\"><a href=\"#1、UserDao\" class=\"headerlink\" title=\"1、UserDao\"></a>1、UserDao</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;添加用户\n  public int addUser(Connection connection,User user) throws SQLException;</code></pre>\n\n\n\n<h5 id=\"2、UserDaoImpl\"><a href=\"#2、UserDaoImpl\" class=\"headerlink\" title=\"2、UserDaoImpl\"></a>2、UserDaoImpl</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;添加用户\npublic int addUser(Connection connection, User user) throws SQLException &#123;\n    PreparedStatement preparedStatement &#x3D; null;\n    int flag &#x3D; 0;\n    if (connection !&#x3D; null) &#123;\n        String sql &#x3D; &quot;insert into &#96;smbms_user&#96; (userCode, userName, userPassword, gender, birthday, phone, address, userRole, createdBy, creationDate) &quot; +\n            &quot;VALUES (?,?,?,?,?,?,?,?,?,?)&quot;;\n        Object[] params &#x3D; &#123;user.getUserCode(), user.getUserName(), user.getUserPassword(), user.getGender(), user.getBirthday(),\n                           user.getPhone(), user.getAddress(), user.getUserRole(), user.getCreatedBy(), user.getCreationDate()&#125;;\n        flag &#x3D; BaseDao.update(preparedStatement,connection,sql,params);\n        BaseDao.closeResources(null,preparedStatement,null);\n    &#125;\n    return flag;\n&#125;</code></pre>\n\n\n\n<h5 id=\"3、UserService\"><a href=\"#3、UserService\" class=\"headerlink\" title=\"3、UserService\"></a>3、UserService</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;添加用户\n  public boolean addUser(User user);</code></pre>\n\n\n\n<h5 id=\"4、UserServiceImpl\"><a href=\"#4、UserServiceImpl\" class=\"headerlink\" title=\"4、UserServiceImpl\"></a>4、UserServiceImpl</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;添加用户\n    public boolean addUser(User user) &#123;\n        Connection connection &#x3D; null;\n        boolean flag &#x3D; false;\n\n        try &#123;\n            connection &#x3D; BaseDao.getConnection();\n            connection.setAutoCommit(false);    &#x2F;&#x2F;开启事务管理\n            int updateRows &#x3D; userDao.addUser(connection, user);\n            if (updateRows &gt; 0) &#123;\n                flag &#x3D; true;\n                connection.commit();\n            &#125;\n        &#125; catch (Exception e) &#123;\n            e.printStackTrace();\n            try &#123;\n                connection.rollback();\n            &#125; catch (SQLException ex) &#123;\n                ex.printStackTrace();\n            &#125;\n        &#125; finally &#123;\n            BaseDao.closeResources(connection, null, null);\n        &#125;\n\n        return flag;\n    &#125;</code></pre>\n\n\n\n<h5 id=\"5、Servlet\"><a href=\"#5、Servlet\" class=\"headerlink\" title=\"5、Servlet\"></a>5、Servlet</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;添加用户\n    public void add(HttpServletRequest req, HttpServletResponse resp) throws IOException, ServletException &#123;\n        String userCode &#x3D; req.getParameter(&quot;userCode&quot;);\n        String userName &#x3D; req.getParameter(&quot;userName&quot;);\n        String userPassword &#x3D; req.getParameter(&quot;userPassword&quot;);\n        String gender &#x3D; req.getParameter(&quot;gender&quot;);\n        String birthday &#x3D; req.getParameter(&quot;birthday&quot;);\n        String phone &#x3D; req.getParameter(&quot;phone&quot;);\n        String address &#x3D; req.getParameter(&quot;address&quot;);\n        String userRole &#x3D; req.getParameter(&quot;userRole&quot;);\n\n        User user &#x3D; new User();\n        user.setUserCode(userCode);\n        user.setUserName(userName);\n        user.setUserPassword(userPassword);\n        user.setGender(Integer.valueOf(gender));\n        try &#123;\n            user.setBirthday(new SimpleDateFormat(&quot;yyyy-MM-dd&quot;).parse(birthday));\n        &#125; catch (ParseException e) &#123;\n            e.printStackTrace();\n        &#125;\n        user.setPhone(phone);\n        user.setAddress(address);\n        user.setUserRole(Integer.valueOf(userRole));\n        user.setCreationDate(new Date());\n        user.setCreatedBy(((User) req.getSession().getAttribute(Constants.User_SESSION)).getId());\n\n        UserService userService &#x3D; new UserServiceImpl();\n        boolean flag &#x3D; userService.addUser(user);\n        if (flag) &#123;\n            resp.sendRedirect(req.getContextPath() + &quot;&#x2F;jsp&#x2F;user.do?method&#x3D;query&quot;);\n        &#125; else &#123;\n            req.getRequestDispatcher(&quot;useradd.jsp&quot;).forward(req, resp);\n        &#125;\n    &#125;</code></pre>\n\n\n\n<h4 id=\"5、删除用户\"><a href=\"#5、删除用户\" class=\"headerlink\" title=\"5、删除用户\"></a>5、删除用户</h4><h5 id=\"1、UserDao-1\"><a href=\"#1、UserDao-1\" class=\"headerlink\" title=\"1、UserDao\"></a>1、UserDao</h5><pre class=\"line-numbers language-JAVA\" data-language=\"JAVA\"><code class=\"language-JAVA\">&#x2F;&#x2F;删除用户\n   public int delectUser(Connection connection, Integer userId) throws SQLException;</code></pre>\n\n<h5 id=\"2、UserDaoImpl-1\"><a href=\"#2、UserDaoImpl-1\" class=\"headerlink\" title=\"2、UserDaoImpl\"></a>2、UserDaoImpl</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;删除用户\npublic int delectUser(Connection connection, Integer userId) throws SQLException &#123;\n    PreparedStatement preparedStatement &#x3D;null;\n    int flag &#x3D; 0;\n    if(connection!&#x3D;null)\n    &#123;\n        String sql &#x3D;&quot;delete from &#96;smbms_user&#96; where &#96;id&#96; &#x3D; ?&quot;;\n        Object []params &#x3D; &#123;userId&#125;;\n        flag &#x3D; BaseDao.update(preparedStatement,connection,sql,params);\n        BaseDao.closeResources(null,preparedStatement,null);\n    &#125;\n\n    return flag;\n&#125;\n</code></pre>\n\n<h5 id=\"3、UserService-1\"><a href=\"#3、UserService-1\" class=\"headerlink\" title=\"3、UserService\"></a>3、UserService</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;删除用户\n   public boolean deleteUser(Integer userId);</code></pre>\n\n<h5 id=\"4、UserServiceImpl-1\"><a href=\"#4、UserServiceImpl-1\" class=\"headerlink\" title=\"4、UserServiceImpl\"></a>4、UserServiceImpl</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;删除用户\n  public boolean deleteUser(Integer userId) &#123;\n      boolean flag &#x3D; false;\n      Connection connection &#x3D; null;\n      try &#123;\n          connection &#x3D; BaseDao.getConnection();\n          if (userDao.delectUser(connection, userId) &gt; 0) &#123;\n              flag&#x3D;true;\n          &#125;\n      &#125; catch (Exception e) &#123;\n          e.printStackTrace();\n      &#125;finally &#123;\n          BaseDao.closeResources(connection,null,null);\n      &#125;\n      return flag;\n  &#125;\n</code></pre>\n\n\n\n<h5 id=\"5、Servlet-1\"><a href=\"#5、Servlet-1\" class=\"headerlink\" title=\"5、Servlet\"></a>5、Servlet</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;删除用户\npublic void deleteUser(HttpServletRequest req, HttpServletResponse resp) throws IOException &#123;\n    String userid &#x3D; req.getParameter(&quot;uid&quot;);\n    JSONObject jreq &#x3D; new JSONObject();\n    int delId &#x3D; 0;\n    try &#123;\n        delId &#x3D; Integer.parseInt(userid);\n    &#125; catch (Exception e) &#123;\n        delId &#x3D; 0;\n    &#125;\n    if (delId &lt;&#x3D; 0) &#123;\n        jreq.put(&quot;delResult&quot;, &quot;notexist&quot;);\n    &#125; else &#123;\n        UserService userService &#x3D; new UserServiceImpl();\n        boolean flag &#x3D; userService.deleteUser(delId);\n        if (flag) &#123;\n            jreq.put(&quot;delResult&quot;, &quot;true&quot;);\n        &#125;else &#123;\n            jreq.put(&quot;delResult&quot;,&quot;false&quot;);\n        &#125;\n    &#125;\n\n    resp.setContentType(&quot;application&#x2F;json&quot;);\n    PrintWriter writer &#x3D; resp.getWriter();\n    writer.write(jreq.toString());\n    writer.flush();\n    writer.close();\n&#125;</code></pre>\n\n\n\n<h4 id=\"6、编辑用户\"><a href=\"#6、编辑用户\" class=\"headerlink\" title=\"6、编辑用户\"></a>6、编辑用户</h4><h5 id=\"1、UserDao-2\"><a href=\"#1、UserDao-2\" class=\"headerlink\" title=\"1、UserDao\"></a>1、UserDao</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;根据ID查找用户\n   public User getUserById(Connection connection,Integer userId) throws SQLException;\n\n   &#x2F;&#x2F;编辑用户\n   public int modifyUser(Connection connection,User user) throws SQLException;</code></pre>\n\n\n\n<h5 id=\"2、UserDaoImpl-2\"><a href=\"#2、UserDaoImpl-2\" class=\"headerlink\" title=\"2、UserDaoImpl\"></a>2、UserDaoImpl</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;根据ID查询用户\n    public User getUserById(Connection connection, Integer userId) throws SQLException &#123;\n        PreparedStatement preparedStatement &#x3D; null;\n        ResultSet rs &#x3D; null;\n        User user &#x3D;null;\n        if(connection!&#x3D;null)&#123;\n            String sql &#x3D;&quot;select u.*,r.roleName as userRoleName from smbms_user u,smbms_role r where id&#x3D;? and u.userRole &#x3D;r.id&quot;;\n            Object []params &#x3D; &#123;userId&#125;;\n            rs &#x3D; BaseDao.executeQuery(preparedStatement,connection,sql,params,rs);\n            if(rs.next())&#123;\n                user &#x3D; new User();\n                user.setId(rs.getInt(&quot;id&quot;));\n                user.setUserCode(rs.getString(&quot;userCode&quot;));\n                user.setUserName(rs.getString(&quot;userName&quot;));\n                user.setUserPassword(rs.getString(&quot;userPassword&quot;));\n                user.setGender(rs.getInt(&quot;gender&quot;));\n                user.setBirthday(rs.getDate(&quot;birthday&quot;));\n                user.setPhone(rs.getString(&quot;phone&quot;));\n                user.setAddress(rs.getString(&quot;address&quot;));\n                user.setUserRole(rs.getInt(&quot;userRole&quot;));\n                user.setModifyBy(rs.getInt(&quot;modifyBy&quot;));\n                user.setModifyDate(rs.getDate(&quot;modifyDate&quot;));\n                user.setUserRoleName(rs.getString(&quot;userRoleName&quot;));\n            &#125;\n            BaseDao.closeResources(null,preparedStatement,rs);\n        &#125;\n        return user;\n    &#125;\n\n    &#x2F;&#x2F;修改用户\n    public int modifyUser(Connection connection, User user) throws SQLException &#123;\n        PreparedStatement preparedStatement &#x3D; null;\n        int flag &#x3D;0;\n        if(connection!&#x3D;null)\n        &#123;\n            String sql&#x3D;&quot;update smbms_user set userName&#x3D;?,gender&#x3D;?,birthday&#x3D;?,phone&#x3D;?,address&#x3D;?,userRole&#x3D;?,modifyBy&#x3D;?,modifyDate&#x3D;? where id&#x3D;?&quot;;\n            Object [] params &#x3D;&#123;user.getUserName(),user.getGender(),user.getBirthday(),user.getPhone(),user.getAddress(),user.getUserRole(),user.getModifyBy(),user.getModifyDate(),user.getId()&#125;;\n            flag &#x3D; BaseDao.update(preparedStatement,connection,sql,params);\n            BaseDao.closeResources(null,preparedStatement,null);\n        &#125;\n        return flag;\n    &#125;\n</code></pre>\n\n\n\n<h5 id=\"3、UserService-2\"><a href=\"#3、UserService-2\" class=\"headerlink\" title=\"3、UserService\"></a>3、UserService</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;根据ID查询用户\n  public User geyUserById(int id);\n\n  &#x2F;&#x2F;修改用户\n  public boolean modifyUser(User user);</code></pre>\n\n\n\n<h5 id=\"4、UserServiceImpl-2\"><a href=\"#4、UserServiceImpl-2\" class=\"headerlink\" title=\"4、UserServiceImpl\"></a>4、UserServiceImpl</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;通过ID查找用户\n   public User geyUserById(int id) &#123;\n       Connection connection &#x3D;null;\n       User user &#x3D; null;\n       try &#123;\n           connection &#x3D;BaseDao.getConnection();\n           user &#x3D; userDao.getUserById(connection,id);\n       &#125; catch (Exception e) &#123;\n           e.printStackTrace();\n       &#125;finally &#123;\n           BaseDao.closeResources(connection,null,null);\n       &#125;\n       return user;\n   &#125;\n\n   &#x2F;&#x2F;修改用户\n   public boolean modifyUser(User user) &#123;\n       boolean flag &#x3D; false;\n       Connection connection &#x3D; null;\n       try &#123;\n           connection &#x3D; BaseDao.getConnection();\n           connection.setAutoCommit(false);\n           if (userDao.modifyUser(connection, user) &gt; 0) &#123;\n               flag &#x3D; true;\n               connection.commit();\n           &#125;\n       &#125; catch (Exception e) &#123;\n           e.printStackTrace();\n           try &#123;\n               connection.rollback();\n           &#125; catch (SQLException ex) &#123;\n               ex.printStackTrace();\n           &#125;\n       &#125; finally &#123;\n           BaseDao.closeResources(connection, null, null);\n       &#125;\n\n       return flag;\n   &#125;\n</code></pre>\n\n\n\n<h5 id=\"5、Servlet-2\"><a href=\"#5、Servlet-2\" class=\"headerlink\" title=\"5、Servlet\"></a>5、Servlet</h5><pre class=\"line-numbers language-JAVA\" data-language=\"JAVA\"><code class=\"language-JAVA\">&#x2F;&#x2F;通过id查找用户\npublic void getUserById(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;\n    String uid &#x3D; req.getParameter(&quot;uid&quot;);\n    User user &#x3D;null;\n    if(!StringUtils.isNullOrEmpty(uid))\n    &#123;\n        UserService userService &#x3D; new UserServiceImpl();\n        user &#x3D; userService.geyUserById(Integer.valueOf(uid));\n        req.setAttribute(&quot;user&quot;,user);\n        req.getRequestDispatcher(&quot;usermodify.jsp&quot;).forward(req,resp);\n    &#125;\n&#125;\n\n\n&#x2F;&#x2F;修改用户\npublic void modifyUser(HttpServletRequest req, HttpServletResponse resp) throws IOException, ServletException &#123;\n    String id &#x3D; req.getParameter(&quot;uid&quot;);\n    String userName &#x3D; req.getParameter(&quot;userName&quot;);\n    String gender &#x3D; req.getParameter(&quot;gender&quot;);\n    String birthday &#x3D; req.getParameter(&quot;birthday&quot;);\n    String phone &#x3D; req.getParameter(&quot;phone&quot;);\n    String address &#x3D; req.getParameter(&quot;address&quot;);\n    String userRole &#x3D; req.getParameter(&quot;userRole&quot;);\n    User user &#x3D; new User();\n    user.setId(Integer.valueOf(id));\n    user.setUserName(userName);\n    user.setGender(Integer.valueOf(gender));\n    try &#123;\n        user.setBirthday(new SimpleDateFormat(&quot;yyyy-MM-mm&quot;).parse(birthday));\n    &#125; catch (ParseException e) &#123;\n        e.printStackTrace();\n    &#125;\n    user.setPhone(phone);\n    user.setAddress(address);\n    user.setUserRole(Integer.valueOf(userRole));\n    user.setModifyBy(((User) req.getSession().getAttribute(Constants.User_SESSION)).getId());\n    user.setModifyDate(new Date());\n\n    UserService userService &#x3D; new UserServiceImpl();\n    if (userService.modifyUser(user))&#123;\n        resp.sendRedirect(req.getContextPath()+&quot;&#x2F;jsp&#x2F;user.do?method&#x3D;query&quot;);\n    &#125;else&#123;\n        req.getRequestDispatcher(&quot;usermodify.jsp&quot;).forward(req,resp);\n    &#125;\n\n&#125;</code></pre>\n\n\n\n<h4 id=\"7、查看用户\"><a href=\"#7、查看用户\" class=\"headerlink\" title=\"7、查看用户\"></a>7、查看用户</h4><h5 id=\"1、Servlet\"><a href=\"#1、Servlet\" class=\"headerlink\" title=\"1、Servlet\"></a>1、Servlet</h5><pre class=\"line-numbers language-JAVA\" data-language=\"JAVA\"><code class=\"language-JAVA\">&#x2F;&#x2F;查看用户\n   public void viewUser(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;\n       String uid &#x3D; req.getParameter(&quot;uid&quot;);\n       User user &#x3D; null;\n       if(!StringUtils.isNullOrEmpty(uid))&#123;\n           UserService userService &#x3D; new UserServiceImpl();\n           user &#x3D; userService.geyUserById(Integer.valueOf(uid));\n           req.setAttribute(&quot;user&quot;,user);\n           req.getRequestDispatcher(&quot;userview.jsp&quot;).forward(req,resp);\n       &#125;\n   &#125;</code></pre>\n\n\n\n<h3 id=\"2、订单管理\"><a href=\"#2、订单管理\" class=\"headerlink\" title=\"2、订单管理\"></a>2、订单管理</h3><h4 id=\"1、订单列表查询\"><a href=\"#1、订单列表查询\" class=\"headerlink\" title=\"1、订单列表查询\"></a>1、订单列表查询</h4><h5 id=\"1、BillDao\"><a href=\"#1、BillDao\" class=\"headerlink\" title=\"1、BillDao\"></a>1、BillDao</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;订单列表\n   public List&lt;Bill&gt; getBillList(Connection connection,String ProductName,int ProviderId,int IsPayment,int currentPageNo,int pageSize) throws SQLException;\n</code></pre>\n\n<h5 id=\"2、BillDaoImpl\"><a href=\"#2、BillDaoImpl\" class=\"headerlink\" title=\"2、BillDaoImpl\"></a>2、BillDaoImpl</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;获取订单列表\n   public List&lt;Bill&gt; getBillList(Connection connection, String ProductName, int ProviderId, int IsPayment, int currentPageNo, int pageSize) throws SQLException &#123;\n       PreparedStatement preparedStatement &#x3D; null;\n       ResultSet rs &#x3D; null;\n       List&lt;Bill&gt; billList &#x3D; new ArrayList&lt;Bill&gt;();\n       if (connection !&#x3D; null) &#123;\n           StringBuffer sql &#x3D; new StringBuffer();\n           sql.append(&quot;select b.*,p.proName as providerName from smbms_bill b,smbms_provider p where b.providerId &#x3D;p.id&quot;);\n           List&lt;Object&gt; list &#x3D; new ArrayList&lt;Object&gt;();\n           if (!StringUtils.isNullOrEmpty(ProductName)) &#123;\n               sql.append(&quot; and b.productName like ? &quot;);\n               list.add(&quot;%&quot; + ProductName + &quot;%&quot;);\n           &#125;\n           if (ProviderId &gt; 0) &#123;\n               sql.append(&quot; and b.providerId&#x3D;?&quot;);\n               list.add(ProviderId);\n           &#125;\n           if (IsPayment &gt; 0) &#123;\n               sql.append(&quot; and b.isPayment&#x3D;?&quot;);\n               list.add(IsPayment);\n           &#125;\n\n           sql.append(&quot; order by creationDate DESC limit ?,?&quot;);\n           currentPageNo &#x3D; (currentPageNo - 1) * pageSize;\n           list.add(currentPageNo);\n           list.add(pageSize);\n\n           Object[] params &#x3D; list.toArray();\n           rs &#x3D; BaseDao.executeQuery(preparedStatement, connection, sql.toString(), params, rs);\n           while (rs.next()) &#123;\n               Bill bill &#x3D; new Bill();\n               bill.setId(rs.getLong(&quot;id&quot;));\n               bill.setBillCode(rs.getString(&quot;billCode&quot;));\n               bill.setProductName(rs.getString(&quot;productName&quot;));\n               bill.setProductDesc(rs.getString(&quot;productDesc&quot;));\n               bill.setProductUnit(rs.getString(&quot;productUnit&quot;));\n               bill.setProductCount(rs.getString(&quot;productCount&quot;));\n               bill.setTotalPrice(rs.getString(&quot;totalPrice&quot;));\n               bill.setIsPayment(rs.getInt(&quot;isPayment&quot;));\n               bill.setCreatedBy(rs.getLong(&quot;createdBy&quot;));\n               bill.setCreationDate(rs.getDate(&quot;creationDate&quot;));\n               bill.setModifyBy(rs.getLong(&quot;modifyBy&quot;));\n               bill.setModifyDate((rs.getDate(&quot;modifyDate&quot;)));\n               bill.setProviderId(rs.getInt(&quot;providerId&quot;));\n               bill.setProviderName(rs.getString(&quot;providerName&quot;));\n\n               billList.add(bill);\n           &#125;\n           BaseDao.closeResources(null, preparedStatement, rs);\n       &#125;\n       return billList;\n   &#125;</code></pre>\n\n<h5 id=\"3、BillService\"><a href=\"#3、BillService\" class=\"headerlink\" title=\"3、BillService\"></a>3、BillService</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;查询订单列表\n public List&lt;Bill&gt; getBillList(String ProductName,int queryProviderId,int IsPayment,int currentPageNo,int pageSize);</code></pre>\n\n<h5 id=\"4、BillServiceImpl\"><a href=\"#4、BillServiceImpl\" class=\"headerlink\" title=\"4、BillServiceImpl\"></a>4、BillServiceImpl</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;查询订单列表\n  public List&lt;Bill&gt; getBillList(String ProductName, int ProviderId, int IsPayment, int currentPageNo, int pageSize) &#123;\n      Connection connection &#x3D; null;\n      List&lt;Bill&gt; billList &#x3D; null;\n      try &#123;\n          connection &#x3D; BaseDao.getConnection();\n          billList &#x3D; billDao.getBillList(connection, ProductName, ProviderId, IsPayment, currentPageNo, pageSize);\n      &#125; catch (Exception e) &#123;\n          e.printStackTrace();\n      &#125; finally &#123;\n          BaseDao.closeResources(connection, null, null);\n      &#125;\n      return billList;\n  &#125;\n</code></pre>\n\n\n\n<h5 id=\"5、Servlet-3\"><a href=\"#5、Servlet-3\" class=\"headerlink\" title=\"5、Servlet\"></a>5、Servlet</h5><pre class=\"line-numbers language-JAVA\" data-language=\"JAVA\"><code class=\"language-JAVA\">&#x2F;&#x2F;得到订单列表  并进行分页显示\n    public void getBillList(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;\n        String queryProductName &#x3D; req.getParameter(&quot;queryProductName&quot;);\n        String queryProviderId &#x3D; req.getParameter(&quot;queryProviderId&quot;);\n        String queryIsPayment &#x3D; req.getParameter(&quot;queryIsPayment&quot;);\n        String pageIndex &#x3D; req.getParameter(&quot;pageIndex&quot;);\n        int providerId &#x3D; 0;\n        int isPayment &#x3D; 0;\n\n        &#x2F;&#x2F;获取账单列表\n        BillService billService &#x3D; new BillServiceImpl();\n        List&lt;Bill&gt; billList &#x3D; null;\n\n        int pageSize &#x3D; Constants.Page_Size;\n        int currentPageNo &#x3D; 1;\n        if (StringUtils.isNullOrEmpty(queryProductName)) &#123;\n            queryProductName &#x3D; &quot;&quot;;\n        &#125;\n        if (!StringUtils.isNullOrEmpty(queryProviderId)) &#123;\n            providerId &#x3D; Integer.parseInt(queryProviderId);\n        &#125;\n\n        if (!StringUtils.isNullOrEmpty(queryIsPayment)) &#123;\n            isPayment &#x3D; Integer.parseInt(queryIsPayment);\n        &#125;\n        if (pageIndex !&#x3D; null) &#123;\n            currentPageNo &#x3D; Integer.parseInt(pageIndex);\n        &#125;\n\n        &#x2F;&#x2F;获取用户总数 ()\n        int totalCount &#x3D; billService.getBillCount(queryProductName,providerId,isPayment);\n        &#x2F;&#x2F;总页数支持\n        PageSupport pageSupport &#x3D; new PageSupport();\n        pageSupport.setCurrentPageNo(currentPageNo);        &#x2F;&#x2F;设置当前页\n        pageSupport.setPageSize(pageSize);                  &#x2F;&#x2F;设置分页数量限制\n        pageSupport.setTotalCount(totalCount);              &#x2F;&#x2F;设置总数\n&#x2F;&#x2F;        pageSupport.setTotalPageCountByRs();        &#x2F;&#x2F;设置totalPageCount数量\n\n        int totalPageCount &#x3D; pageSupport.getTotalPageCount();       &#x2F;&#x2F;得到总分页数量。\n\n        &#x2F;&#x2F;控制首尾页显示\n        if (currentPageNo &lt; 1) &#123;        &#x2F;&#x2F;当前页小于1\n            currentPageNo &#x3D; 1;\n        &#125; else if (currentPageNo &gt; totalPageCount) &#123;         &#x2F;&#x2F;当前页大于总页数\n            currentPageNo &#x3D; totalPageCount;\n        &#125;\n\n\n        billList &#x3D; billService.getBillList(queryProductName, providerId, isPayment,currentPageNo,pageSize);\n        req.setAttribute(&quot;billList&quot;, billList);\n        List&lt;Provider&gt; providerList &#x3D; new ArrayList&lt;Provider&gt;();\n        ProviderService providerService &#x3D; new ProviderServiceImpl();\n        providerList &#x3D; providerService.getProviderList();\n        req.setAttribute(&quot;queryProviderId&quot;, queryProviderId);\n        req.setAttribute(&quot;providerList&quot;, providerList);\n        req.setAttribute(&quot;queryProductName&quot;, queryProductName);\n        req.setAttribute(&quot;queryIsPayment&quot;, queryIsPayment);\n        req.setAttribute(&quot;totalPageCount&quot;, totalPageCount);\n        req.setAttribute(&quot;totalCount&quot;, totalCount);\n        req.setAttribute(&quot;currentPageNo&quot;, currentPageNo);\n\n        req.getRequestDispatcher(&quot;billlist.jsp&quot;).forward(req, resp);\n    &#125;\n</code></pre>\n\n\n\n<h4 id=\"2、删除订单\"><a href=\"#2、删除订单\" class=\"headerlink\" title=\"2、删除订单\"></a>2、删除订单</h4><h5 id=\"1、BillDao-1\"><a href=\"#1、BillDao-1\" class=\"headerlink\" title=\"1、BillDao\"></a>1、BillDao</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;删除订单信息\n  public int deleteBill(Connection connection,int id) throws SQLException;</code></pre>\n\n<h5 id=\"2、BillDaoImpl-1\"><a href=\"#2、BillDaoImpl-1\" class=\"headerlink\" title=\"2、BillDaoImpl\"></a>2、BillDaoImpl</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;删除订单信息\n   public int deleteBill(Connection connection, int id) throws SQLException &#123;\n       PreparedStatement preparedStatement &#x3D; null;\n       int flag&#x3D;0;\n       if(connection!&#x3D;null)&#123;\n           String sql &#x3D;&quot;delete from &#96;smbms_bill&#96; where id&#x3D; ?&quot;;\n           Object [] params&#x3D;&#123;id&#125;;\n           flag &#x3D; BaseDao.update(preparedStatement,connection,sql,params);\n           BaseDao.closeResources(null,preparedStatement,null);\n       &#125;\n       return flag;\n   &#125;</code></pre>\n\n<h5 id=\"3、BillService-1\"><a href=\"#3、BillService-1\" class=\"headerlink\" title=\"3、BillService\"></a>3、BillService</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;删除订单\n public boolean deleteBill(int id);</code></pre>\n\n<h5 id=\"4、BillServiceImpl-1\"><a href=\"#4、BillServiceImpl-1\" class=\"headerlink\" title=\"4、BillServiceImpl\"></a>4、BillServiceImpl</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;删除订单信息\n    public boolean deleteBill(int id) &#123;\n        Connection connection &#x3D; null;\n        boolean flag &#x3D; false;\n        try &#123;\n            connection &#x3D; BaseDao.getConnection();\n            if (billDao.deleteBill(connection, id) &gt; 0) &#123;\n                flag &#x3D; true;\n            &#125;\n        &#125; catch (Exception e) &#123;\n            e.printStackTrace();\n        &#125; finally &#123;\n            BaseDao.closeResources(connection, null, null);\n        &#125;\n        return flag;\n    &#125;</code></pre>\n\n<h5 id=\"5、Servlet-4\"><a href=\"#5、Servlet-4\" class=\"headerlink\" title=\"5、Servlet\"></a>5、Servlet</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;删除订单\n    public void deleteBill(HttpServletRequest req, HttpServletResponse resp) throws IOException &#123;\n        String billid &#x3D; req.getParameter(&quot;billid&quot;);\n        JSONObject jreq &#x3D; new JSONObject();\n        int bid&#x3D;0;\n        try &#123;\n            bid &#x3D; Integer.parseInt(billid);\n        &#125;catch(Exception e)&#123;\n            e.printStackTrace();\n            bid&#x3D;0;\n        &#125;\n        if(bid&lt;&#x3D;0)&#123;\n            jreq.put(&quot;delResult&quot;,&quot;notexist&quot;);\n        &#125;else&#123;\n            BillService billService &#x3D; new BillServiceImpl();\n            boolean flag&#x3D;false;\n            flag &#x3D; billService.deleteBill(bid);\n            if(flag)&#123;\n                jreq.put(&quot;delResult&quot;,&quot;true&quot;);\n            &#125;else&#123;\n                jreq.put(&quot;delResult&quot;,&quot;false&quot;);\n            &#125;\n        &#125;\n        resp.setContentType(&quot;application&#x2F;json&quot;);\n        PrintWriter writer &#x3D; resp.getWriter();\n        writer.write(jreq.toString());\n        writer.flush();\n        writer.close();\n    &#125;</code></pre>\n\n","text":"SMBMS1、项目搭建1.搭建一个Maven web 项目 2.配置Tomcat 3.测试项目 4.导入项目中需要的jar包 5.编写实体类 ​ ORM映射：表-类映射 6.编写基础公共类 ​ 1.数据库配置文件 driver&#x3D;com.mysql.jdbc.Driver...","link":"","photos":[],"count_time":{"symbolsCount":"41k","symbolsTime":"37 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#SMBMS\"><span class=\"toc-text\">SMBMS</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1%E3%80%81%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA\"><span class=\"toc-text\">1、项目搭建</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2%E3%80%81%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">2、登录界面实现</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">登录界面优化</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3%E3%80%81%E5%AF%86%E7%A0%81%E4%BF%AE%E6%94%B9\"><span class=\"toc-text\">3、密码修改</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4%E3%80%81%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">4、用户管理实现</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%E3%80%81%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">1、用户管理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1%E3%80%81%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7%E6%95%B0%E9%87%8F\"><span class=\"toc-text\">1、获取用户数量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1-UserDao\"><span class=\"toc-text\">1.UserDao</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-UserDaoImpl\"><span class=\"toc-text\">2.UserDaoImpl</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-UserService\"><span class=\"toc-text\">3.UserService</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4-UserServiceImpl\"><span class=\"toc-text\">4.UserServiceImpl</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5%E3%80%81servlet%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">5、servlet操作</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2%E3%80%81%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7%E5%88%97%E8%A1%A8\"><span class=\"toc-text\">2、获取用户列表</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1-UserDao-1\"><span class=\"toc-text\">1.UserDao</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-UserDaoImpl-1\"><span class=\"toc-text\">2.UserDaoImpl</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-UserService-1\"><span class=\"toc-text\">3.UserService</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4-UserServiceImpl-1\"><span class=\"toc-text\">4.UserServiceImpl</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5-Servlet%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">5.Servlet实现</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3%E3%80%81%E8%8E%B7%E5%8F%96%E8%A7%92%E8%89%B2%E5%88%97%E8%A1%A8\"><span class=\"toc-text\">3、获取角色列表</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1%E3%80%81RoleDao\"><span class=\"toc-text\">1、RoleDao</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2%E3%80%81RoleDaoImpl\"><span class=\"toc-text\">2、RoleDaoImpl</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3%E3%80%81RoleService\"><span class=\"toc-text\">3、RoleService</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4%E3%80%81RoleServiceImpl\"><span class=\"toc-text\">4、RoleServiceImpl</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4%E3%80%81%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7\"><span class=\"toc-text\">4、添加用户</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1%E3%80%81UserDao\"><span class=\"toc-text\">1、UserDao</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2%E3%80%81UserDaoImpl\"><span class=\"toc-text\">2、UserDaoImpl</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3%E3%80%81UserService\"><span class=\"toc-text\">3、UserService</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4%E3%80%81UserServiceImpl\"><span class=\"toc-text\">4、UserServiceImpl</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5%E3%80%81Servlet\"><span class=\"toc-text\">5、Servlet</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5%E3%80%81%E5%88%A0%E9%99%A4%E7%94%A8%E6%88%B7\"><span class=\"toc-text\">5、删除用户</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1%E3%80%81UserDao-1\"><span class=\"toc-text\">1、UserDao</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2%E3%80%81UserDaoImpl-1\"><span class=\"toc-text\">2、UserDaoImpl</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3%E3%80%81UserService-1\"><span class=\"toc-text\">3、UserService</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4%E3%80%81UserServiceImpl-1\"><span class=\"toc-text\">4、UserServiceImpl</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5%E3%80%81Servlet-1\"><span class=\"toc-text\">5、Servlet</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6%E3%80%81%E7%BC%96%E8%BE%91%E7%94%A8%E6%88%B7\"><span class=\"toc-text\">6、编辑用户</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1%E3%80%81UserDao-2\"><span class=\"toc-text\">1、UserDao</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2%E3%80%81UserDaoImpl-2\"><span class=\"toc-text\">2、UserDaoImpl</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3%E3%80%81UserService-2\"><span class=\"toc-text\">3、UserService</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4%E3%80%81UserServiceImpl-2\"><span class=\"toc-text\">4、UserServiceImpl</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5%E3%80%81Servlet-2\"><span class=\"toc-text\">5、Servlet</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#7%E3%80%81%E6%9F%A5%E7%9C%8B%E7%94%A8%E6%88%B7\"><span class=\"toc-text\">7、查看用户</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1%E3%80%81Servlet\"><span class=\"toc-text\">1、Servlet</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2%E3%80%81%E8%AE%A2%E5%8D%95%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">2、订单管理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1%E3%80%81%E8%AE%A2%E5%8D%95%E5%88%97%E8%A1%A8%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">1、订单列表查询</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1%E3%80%81BillDao\"><span class=\"toc-text\">1、BillDao</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2%E3%80%81BillDaoImpl\"><span class=\"toc-text\">2、BillDaoImpl</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3%E3%80%81BillService\"><span class=\"toc-text\">3、BillService</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4%E3%80%81BillServiceImpl\"><span class=\"toc-text\">4、BillServiceImpl</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5%E3%80%81Servlet-3\"><span class=\"toc-text\">5、Servlet</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2%E3%80%81%E5%88%A0%E9%99%A4%E8%AE%A2%E5%8D%95\"><span class=\"toc-text\">2、删除订单</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1%E3%80%81BillDao-1\"><span class=\"toc-text\">1、BillDao</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2%E3%80%81BillDaoImpl-1\"><span class=\"toc-text\">2、BillDaoImpl</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3%E3%80%81BillService-1\"><span class=\"toc-text\">3、BillService</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4%E3%80%81BillServiceImpl-1\"><span class=\"toc-text\">4、BillServiceImpl</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5%E3%80%81Servlet-4\"><span class=\"toc-text\">5、Servlet</span></a></li></ol></li></ol></li></ol></li></ol></li></ol>","author":{"name":"Xoc001","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"SocketTCP","date":"2022-02-10T17:38:23.855Z","updated":"2022-01-01T10:17:03.195Z","comments":true,"path":"api/articles/SocketTCP.json","keywords":null,"cover":[],"text":"Socket&#x2F;TCP数据发送与接收的规则 数据的完整性发送方 public void sendMsg(String msg) throws Exception&#123; byte[] msgBytes &#x3D; msg.getBytes(charset); &#x...","link":"","photos":[],"count_time":{"symbolsCount":"6k","symbolsTime":"5 mins."},"categories":[],"tags":[],"author":{"name":"Xoc001","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"MyBatis","date":"2022-02-10T17:38:23.826Z","updated":"2021-09-03T11:14:13.096Z","comments":true,"path":"api/articles/MyBatis.json","keywords":null,"cover":[],"text":"MyBatis1、简介 1.1、什么是 MyBatis？MyBatis 是一款优秀的持久层框架，它支持自定义 SQL、存储过程以及高级映射。MyBatis 免除了几乎所有的 JDBC 代码以及设置参数和获取结果集的工作。MyBatis 可以通过简单的 XML 或注解来配置和映射原...","link":"","photos":[],"count_time":{"symbolsCount":"26k","symbolsTime":"23 mins."},"categories":[],"tags":[],"author":{"name":"Xoc001","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}